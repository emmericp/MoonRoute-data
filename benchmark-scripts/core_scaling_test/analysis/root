#!/usr/bin/perl
use strict;
use warnings;
 
my $filename = 'testdata';
open(my $fh, '<', $filename)
  or die "Could not open file '$filename' $!";
 
my %hash = ();

while (my $row = <$fh>) {

  $row =~ /^\[cfg_(\d*)_run_(\d*)_(\S*)] .* (\S*) MBit\/s wire rate.$/;
  my $cfg = $1;
  my $run = $2;
  my $mac = $3;
  my $rate = $4;
  if(exists $hash{$cfg}{$run}){
    $hash{$cfg}{$run} =$hash{$cfg}{$run} +  $rate;
  }else{
    $hash{$cfg}{$run} = $rate;
  }

  #print " parsed: $cfg $run $mac $rate\n";


  #chomp $row;
  #my @array = split /\s+/, $row;

  ##compute mean:
  #my $avg = 0;
  #for (my $i=1; $i <= $#array; $i++) {
  #  $avg += $array[$i];
  #}
  #$avg = $avg / $#array;

  ##compute std deviv:
  #my $drv = 0;
  #for (my $i=1; $i <= $#array; $i++) {
  #  $drv += ($avg - $array[$i])**2;
  #  #print "drv = $drv\n";
  #}
  #$drv = $drv / $#array;
  #$drv = sqrt($drv);

  #print "$array[0] $avg $drv\n";
}


my $cfg;
my $value;
my $run;
my $rate;
#foreach my $cfg (keys %hash) {
#    while (my ($key, $value) = each %{ $hash{$cfg} } ) {
#        print "$key = $value \n";
#    }
#}
while (($cfg, $value) = each %hash) {
  #print $cfg, "\n";

  while (($run, $rate) = each %{ $value }) {
    print $rate, "\n";
  }

}
